name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Set up environment variables from secrets
        run: |
          echo "TF_VAR_vpc_id=${{ secrets.VPC_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_master_username=${{ secrets.MASTERUSERNAME }}" >> $GITHUB_ENV
          echo "TF_VAR_db_password=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Check environment variables setup
        run: |
          echo "VPC ID set: ${{ env.TF_VAR_vpc_id }}"
          echo "Master username set: ${{ env.TF_VAR_master_username }}"
          echo "DB password set: ${{ env.TF_VAR_db_password }}"
          echo "AWS Access Key set: ${{ env.AWS_ACCESS_KEY_ID }}"
          echo "AWS Secret Key set: ${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
